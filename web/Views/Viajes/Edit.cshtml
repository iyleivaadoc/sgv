@model web.Models.Viajes

@{
    ViewBag.Title = "Editar proceso";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-6 col-md-offset-3">
        <h4>Edición de proceso</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdViaje)

        <div class="form-group">
            @Html.LabelFor(model => model.Viaje, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Viaje, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Viaje, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescripcionViaje, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescripcionViaje, new { @class = "form-control", @style= "height: 100px;" })
                @Html.ValidationMessageFor(model => model.DescripcionViaje, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdPaisOrigen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdPaisOrigen", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdPaisOrigen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdPaisDestino, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdPaisDestino", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdPaisDestino, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaFin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaFin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ViaViaje, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ViaViaje, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ViaViaje, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="otro" class="form-group" style="display:none">
            @Html.LabelFor(model => model.ClasificacionOtro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClasificacionOtro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClasificacionOtro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClasificacionViaje, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ClasificacionViaje, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClasificacionViaje, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @Html.HiddenFor(model => model.IdUsuarioViaja)
        @Html.HiddenFor(model => model.UsuarioCrea)
        @Html.HiddenFor(model => model.UsuarioMod)
        @Html.HiddenFor(model => model.FechaCrea)
        @Html.HiddenFor(model => model.FechaMod)
        @Html.HiddenFor(model => model.Eliminado)


        <div class="form-group">
            <div class="text-center">
                <input type="submit" id="bttn" value="Guardar" class="btn btn-warning" />
                @Html.ActionLink("Cancelar", "Index", null, new { @class="btn btn-success"})
            </div>
        </div>
    </div>
}

<script>
    if ($("#ViaViaje").get(0).value == 3) {
        $("#otro").show();
        $("#ClasificacionViaje").empty();
        $("#ClasificacionViaje").append(new Option("Otra", 3));
    }
    

    $("#ViaViaje").on("change", function () {
        if ($("#ViaViaje").get(0).value == 3) {
            $("#otro").show();
            if ($("#IdPaisOrigen").get(0).value == $("#IdPaisDestino").get(0).value) {
                $("#ClasificacionViaje").empty();
                $("#ClasificacionViaje").append(new Option("Otra", 3));
                $("#ClasificacionViaje").get(0).value = 3;
            }
        } else {
            $("#otro").hide();
            if ($("#IdPaisOrigen").get(0).value == $("#IdPaisDestino").get(0).value) {
                $("#ClasificacionViaje").empty();
                $("#ClasificacionViaje").append(new Option("Interior", 1));
                $("#ClasificacionViaje").append(new Option("Otra", 3));
                $("#ClasificacionViaje").get(0).value = 1;
            }
        }
    })
    $("#IdPaisOrigen").on("change", function () {
        if ($("#IdPaisOrigen").get(0).value == $("#IdPaisDestino").get(0).value) {
            $("#ClasificacionViaje").empty();
            if ($("#ViaViaje").get(0).value == 3) {
                $("#ClasificacionViaje").append(new Option("Otra", 3));
                $("#ClasificacionViaje").get(0).value = 3;
            } else {
                $("#ClasificacionViaje").append(new Option("Interior", 1));
                $("#ClasificacionViaje").append(new Option("Otra", 3));
                $("#ClasificacionViaje").get(0).value = 1;
            }
        } else {
            $("#ClasificacionViaje").empty();
            $("#ClasificacionViaje").append(new Option("Exterior", 2));
            $("#ClasificacionViaje").get(0).value = 2;
        }
    })
    $("#IdPaisDestino").on("change", function () {
        if ($("#IdPaisOrigen").get(0).value == $("#IdPaisDestino").get(0).value) {
            $("#ClasificacionViaje").empty();
            if ($("#ViaViaje").get(0).value == 3) {
                $("#ClasificacionViaje").append(new Option("Otra", 3));
                $("#ClasificacionViaje").get(0).value = 3;
            } else {
                $("#ClasificacionViaje").append(new Option("Interior", 1));
                $("#ClasificacionViaje").append(new Option("Otra", 3));
                $("#ClasificacionViaje").get(0).value = 1;
            }
        } else {
            $("#ClasificacionViaje").empty();
            $("#ClasificacionViaje").append(new Option("Exterior", 2));
            $("#ClasificacionViaje").get(0).value = 2;
        }
    })


    $("#FechaInicio").focusout(function () {
        var fec = $("#FechaInicio").get(0).value;
        var fecF = $("#FechaFin").get(0).value;
        if (fec > fecF) {
            alertify.error("La fecha de inicio debe ser menor que la fecha de fin.");
            $("#bttn").prop('disabled', true);
        }
        else {
            $("#bttn").prop('disabled', false);
        }
    })

    $("#FechaFin").focusout(function () {
        var fec = $("#FechaInicio").get(0).value;
        var fecF = $("#FechaFin").get(0).value;
        if (fec > fecF) {
            alertify.error("La fecha de inicio debe ser menor que la fecha de fin.");
            $("#bttn").prop('disabled', true);
        }
        else {
            $("#bttn").prop('disabled', false);
        }
    })
</script>
